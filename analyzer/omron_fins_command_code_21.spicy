module OMRON_FINS_COMMAND_CODE_21;

import spicy;
import OMRON_FINS_ENUMS;
import OMRON_FINS_ERROR_CODES;
import OMRON_FINS_FUNCTIONS;
import OMRON_FINS_TYPES;

#
# ErrorClear
#
type ErrorClear = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ErrorClear_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ErrorClear_Response();
    };
};

type ErrorClear_Command = unit {
    errorResetFalNo : uint16 &convert=OMRON_FINS_ERROR_CODES::ErrorCode($$);
};

type ErrorClear_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
};

#
# ErrorLogRead
#
type ErrorLogRead = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ErrorLogRead_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ErrorLogRead_Response();
    };
};

type ErrorLogRead_Command = unit {
    beginningRecordNo : uint16;
    noOfRecords       : uint16;
};

type ErrorLogRead_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
    maxNoStoredRecords : uint16;
    noOfStoredRecords  : uint16;
    noOfRecords        : uint16;
    errorRecords       : OMRON_FINS_TYPES::ErrorRecord[self.noOfRecords];

};

#
# ErrorLogClear
#
type ErrorLogClear = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ErrorLogClear_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ErrorLogClear_Response();
    };
};

type ErrorLogClear_Command = unit {
    : bytes &eod; # Note: There is no data associated with the Error Log Clear command - hence the anonymous field
};

type ErrorLogClear_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
};
