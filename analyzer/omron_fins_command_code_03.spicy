module OMRON_FINS_COMMAND_CODE_03;

import spicy;
import OMRON_FINS_ENUMS;
import OMRON_FINS_FUNCTIONS;
import OMRON_FINS_TYPES;

#
# ProgramAreaProtect
#
type ProgramAreaProtect = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ProgramAreaProtect_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ProgramAreaProtect_Response();
    };
};

type ProgramAreaProtect_Command = unit {
    var passwordAsString : string;
    programNo     : uint16;
    protectCode   : uint8;
    beginningWord : uint32 &convert=OMRON_FINS_FUNCTIONS::uintToHexString($$);
    lastWord      : uint32 &convert=OMRON_FINS_FUNCTIONS::uintToHexString($$);
    password      : bytes  &size=4;

    on %done {
        self.passwordAsString = self.password.decode();
    }
};

type ProgramAreaProtect_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
};

#
# ProgramAreaProtectClear
#
type ProgramAreaProtectClear = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ProgramAreaProtectClear_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ProgramAreaProtectClear_Response();
    };
};

type ProgramAreaProtectClear_Command = unit {
    var passwordAsString : string;
    programNo     : uint16;
    protectCode   : uint8;
    beginningWord : uint32 &convert=OMRON_FINS_FUNCTIONS::uintToHexString($$);
    lastWord      : uint32 &convert=OMRON_FINS_FUNCTIONS::uintToHexString($$);
    password      : bytes  &size=4;

    on %done {
        self.passwordAsString = self.password.decode();
    }

};

type ProgramAreaProtectClear_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
};

#
# ProgramAreaRead
#
type ProgramAreaRead = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ProgramAreaRead_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ProgramAreaRead_Response();
    };
};

type ProgramAreaRead_Command = unit {
};

type ProgramAreaRead_Response = unit {
};

#
# ProgramAreaWrite
#
type ProgramAreaWrite = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ProgramAreaWrite_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ProgramAreaWrite_Response();
    };
};

type ProgramAreaWrite_Command = unit {
};

type ProgramAreaWrite_Response = unit {
};

#
# ProgramAreaClear
#
type ProgramAreaClear = unit(dataType: OMRON_FINS_ENUMS::DataType) {
    switch(dataType) {
        OMRON_FINS_ENUMS::DataType::COMMAND  -> command : ProgramAreaClear_Command();
        OMRON_FINS_ENUMS::DataType::RESPONSE -> response: ProgramAreaClear_Response();
    };
};

type ProgramAreaClear_Command = unit {
    programNo : uint16;
    clearCode : uint8 &convert=OMRON_FINS_FUNCTIONS::uintToHexString($$);
};

type ProgramAreaClear_Response = unit {
    responseCode : uint16 &convert=OMRON_FINS_ENUMS::ResponseCode($$);
};
